vektor <- function(m){
x <- rexp(1, 1/m)
y <- rexp(1, 1/m)
return((x-y)/(x+y))
}
pokus9_1 <- replicate(436754, vektor(2))
hist(pokus9_1)
pokus9_2 <- replicate(436754, vektor(3))
hist(pokus9_2)
20*O.85
20*0.85
pbinom(12, 20, 0.85)
pbinom(12, 20, 0.5)
pbinom(0:11, 20, 0.5)
sum(pbinom(0:11, 20, 0.85))
sum(pbinom(0:11, 20, 0.5))
sum(pbinom(12:20, 20, 0.5))
pbinom(12:20, 20, 0.5)
?plot
source('C:/Users/roman/Desktop/school/MAD/hwR1.R', echo=TRUE)
rows <-  (1:10)*10
columns <-  c(0.6, 0.7, 0.8, 0.9)
pvalues <-  matrix(0,length(rows),length(columns))
for(i in 1:length(rows)){
for(j in 1:length(columns)){
pvalues[i,j] = binom.test(rows[i]*columns[j], rows[i], p = 0.5, alternative="greater")$p.value
}
}
rownames(pvalues) <- rows
colnames(pvalues) <- columns
pvalues["10","0.6"]
x <-  matrix(rep(rows,length(columns)),nrow=length(rows))
png("sign.png")
matplot(x,pvalues,type="l",col=c(1:length(columns)),lty=1)
legend("topright",legend=columns,col=c(1:length(columns)),lty=1)
dev.off()
input <-  read.table("C:/Users/roman/Desktop/school/MAD/acids.tsv", header=TRUE, row.names=1)
input <-  log2(input)
med <-  apply(input, 2, median)
a <-  scale(input, center=med)
my.test <- function(table, lst1, lst2){
rows <- nrow(table)
result <- c()
for(r in 1:rows){
x1 <-  table[r, lst1]
x2 <- table[r, lst2]
result <- append(result, t.test(x1,x2)$p.value)
}
return(result)
}
pb <- my.test(a, 1:3, 7:9)
pb[1:5]
pb
pb
source('C:/Users/roman/Desktop/school/MAD/hwR2.R', echo=TRUE)
source('C:/Users/roman/Desktop/school/MAD/hwR2.R', echo=TRUE)
source('C:/Users/roman/Desktop/school/MAD/hwR2.R', echo=TRUE)
source('C:/Users/roman/Desktop/school/MAD/hwR2.R', echo=TRUE)
source('C:/Users/roman/Desktop/school/MAD/hwR2.R', echo=TRUE)
pb <- my.test(a, 1:3, 7:9)
pb.adjusted = p.adjust(pb, method ="bonferroni")
a <-  cbind(a, pb, pb.adjusted)
ob = order(pb.adjusted)
a[ob[1:5],c(1:3,7:9,16,17)]
one <- my.test(a, 1:3, 4:6)
two <-  my.test(a, 1:3, 7:9)
three <- my.test(a, 1:3, 10:12)
four <-  my.test(a, 1:3, 13:15)
sum(one <= 0.1)
sum(two <= 0.1)
sum(three <= 0.1)
sum(four <= 0.1)
sum(one <= 0.01)
sum(two <= 0.01)
sum(three <= 0.01)
sum(four <= 0.01)
both <- one <= 0.01 & two <= 0.01
sum(both)
source('C:/Users/roman/Desktop/school/MAD/hwR2.R', echo=TRUE)
a = "ahoj"
a
b = "svet"
prin(a,b)
print(a,b)
?print
NaN
source("~/.active-rstudio-document", echo=TRUE)
K.najblizsich.susedov.HUDEC <- function(X, K){
has.NA <- NaN %in% X
return(has.NA)
}
main <- function(){
X <- matrix(
c(
1,2,4,
NA,5,6,
7,8,NA,
NA,3,4,
3,4,5
),nrow=5,ncol=3,byrow=TRUE)
#--------------------------------------
XX<-matrix(
c(
NA, 2, 3,
1, 3, 4,
2,NA,NA,
3, 3, 4,
4, 3,NA
),ncol=3,nrow=5,byrow=TRUE)
print(K.najblizsich.susedov.HUDEC(X, 3))
print(K.najblizsich.susedov.HUDECXX, 3)
}
main <- function(){
X <- matrix(
c(
1,2,4,
NA,5,6,
7,8,NA,
NA,3,4,
3,4,5
),nrow=5,ncol=3,byrow=TRUE)
#--------------------------------------
XX<-matrix(
c(
NA, 2, 3,
1, 3, 4,
2,NA,NA,
3, 3, 4,
4, 3,NA
),ncol=3,nrow=5,byrow=TRUE)
print(K.najblizsich.susedov.HUDEC(X, 3))
print(K.najblizsich.susedov.HUDEC(XX, 3)
}
main <- function(){
X <- matrix(
c(
1,2,4,
NA,5,6,
7,8,NA,
NA,3,4,
3,4,5
),nrow=5,ncol=3,byrow=TRUE)
#--------------------------------------
XX<-matrix(
c(
NA, 2, 3,
1, 3, 4,
2,NA,NA,
3, 3, 4,
4, 3,NA
),ncol=3,nrow=5,byrow=TRUE)
print(K.najblizsich.susedov.HUDEC(X, 3))
print(K.najblizsich.susedov.HUDEC(XX, 3))
}
main()
XX<-matrix(
c(
NA, 2, 3,
1, 3, 4,
2,NA,NA,
3, 3, 4,
4, 3,NA
),ncol=3,nrow=5,byrow=TRUE)
length(XX)
nrow(XX)
K.najblizsich.susedov.HUDEC <- function(X, K){
rows <- nrow(X)
has.NA <- 1:rows
for(i in 1:rows){
has.NA[i] <- NaN %in% X[i, ];
}
return(has.NA)
}
main()
K.najblizsich.susedov.HUDEC <- function(X, K){
rows <- nrow(X)
has.NA <- 1:rows
for(i in 1:rows){
has.NA[i] <- NA %in% X[i, ];
}
return(has.NA)
}
main()
source("C:/Users/roman/Desktop/school/PaŠ/Štatistické metódy/cvicenia/cvicenie3/riesenie1.R", echo=TRUE)
split.rows <- function(matrix){
rows <- nrow(matrix)
healthy <- c()
ill <- c()
for(i in 1:rows){
if(NA %in% matrix[i, ]){
ill = c(ill, i)
}else{
healthy = c(healthy, i)
}
}
return(list(healthy, list))
}
X <- matrix(
c(
1,2,4,
NA,5,6,
7,8,NA,
NA,3,4,
3,4,5
),nrow=5,ncol=3,byrow=TRUE)
split_rows(X)
split.rows(X)
X
split.rows <- function(matrix){
rows <- nrow(matrix)
healthy <- c()
ill <- c()
for(i in 1:rows){
if(NA %in% matrix[i, ]){
ill = c(ill, i)
}else{
healthy = c(healthy, i)
}
}
return(list(healthy, ill))
}
split.rows(X)
?knn
??knn
?range
range(1, 5)
pf(2023, 1, 1)
library(spss)
?read.spss
library(foreign)
?read.spss
FILE.NAME <- "C:\Users\roman\Desktop\school\BS\bp\SAAVSspokoj.sav"
FILE.NAME <- "C:/Users/roman/Desktop/school/BS/bp/SAAVSspokoj.sav"
data <- read.spss(FILE.NAME)
data <- read.spss(FILE.NAME. to.data.frame=TRUE)
data <- read.spss(FILE.NAME, to.data.frame=TRUE)
tail(data)
data <- read.spss(FILE.NAME, to.data.frame=TRUE, reencode="utf-8")
tail(data)
head(data)
colnames(data)
data2 = read.spss(FILE.NAME)
data2 = read.spss(FILE.NAME, reencode = "utf-8")
head(data2)
head(data2, 5)
data
flex <- subset(data, 7:11)
?subset
flex <- subset(data, select=7:11)
flex
head(flex)
col.names <- colnames(data)
col.names
ucitVZD <- subset(data, select=19:25)
head(ucitVZD)
#flexibility
flex <- subset(data, select=7:11)
#pred
pred <- subset(data, select = 12:18)
#ucitVZD
ucitVZD <- subset(data, select=19:25)
#ucitPRSIST
ucitPRIST <- subset(data, select = 26:32)
#hodnot
hodnot <- subset(data, select = 33:37)
#zruc
zruc <- subset(data, select=38:43)
#podpor
podpor <- subset(data, select=44:48)
podpor
head(podpor)
programmes <- unique(data$odbor)
programmes
library(foreign)
FILE.NAME <- "C:/Users/roman/Desktop/school/BS/bp/SAAVSspokoj.sav"
#load data
data <- read.spss(FILE.NAME, to.data.frame=TRUE, reencode="utf-8")
flex <- subset(data, select=7:11)
head(flex)
converter <- function(x){
if(x == "Rozhodne súhlasím"){
return(4)
}
if(x == "Skôr nesúhlasím"){
return(3)
}
if(x == "Skôr nesúhlasím"){
return(2)
}
if(x == "Rozhodne nesúhlasím"){
return(1)
}
return(x)
}
data1 <- data.frame(lapply(data, converter))
warnings()
head(data1)
data1 <- data.frame(lapply(flex, converter))
"ahoj" == "ahoj"
head(data1)
head(flex)
data1 <- data.frame(apply(flex, converter))
?apply
data1 <- data.frame(apply(flex,c(1, 2), converter))
head(data1)
converter <- function(x){
if(x == "Rozhodne súhlasím"){
return(4)
}
if(x == "Skôr súhlasím"){
return(3)
}
if(x == "Skôr nesúhlasím"){
return(2)
}
if(x == "Rozhodne nesúhlasím"){
return(1)
}
return(x)
}
data1 <- data.frame(apply(flex,c(1, 2), converter))
head(data1)
data$flex
f = data$flex
head(f)
head(data1)
head(ucitVZD)
head(pred)
converter <- function(x){
if(any(x == c("Rozhodne súhlasím","Takmer všetci učitelia", "Takmer všetky predmety" ))){
return(4)
}
if(any(x == "Skôr súhlasím", "Väčšina učiteľov", "Väčšina predmetov"))){
return(3)
}
if(any(x == c("Skôr nesúhlasím", "Menšina učiteľov", "Menšina predmetov"))){
return(2)
}
if(any(x == c("Rozhodne nesúhlasím", "Takmer žiadni učitelia", "Takmer žiadne predmety"))){
return(1)
}
return(x)
}
converter <- function(x){
if(any(x == c("Rozhodne súhlasím","Takmer všetci učitelia", "Takmer všetky predmety" ))){
return(4)
}
if(any(x == "Skôr súhlasím", "Väčšina učiteľov", "Väčšina predmetov"))){
return(3)
}
if(any(x == c("Skôr nesúhlasím", "Menšina učiteľov", "Menšina predmetov"))){
return(2)
}
if(any(x == c("Rozhodne nesúhlasím", "Takmer žiadni učitelia", "Takmer žiadne predmety"))){
return(1)
}
return(x)
}
converter <- function(x){
if(any(x == c("Rozhodne súhlasím","Takmer všetci učitelia", "Takmer všetky predmety" ))){
return(4)
}
if(any(x == "Skôr súhlasím", "Väčšina učiteľov", "Väčšina predmetov"))){
return(3)
}
if(any(x == c("Skôr nesúhlasím", "Menšina učiteľov", "Menšina predmetov"))){
return(2)
}
if(any(x == c("Rozhodne nesúhlasím", "Takmer žiadni učitelia", "Takmer žiadne predmety"))){
return(1)
}
return(x)
}
converter <- function(x){
if(any(x == c("Rozhodne súhlasím","Takmer všetci učitelia", "Takmer všetky predmety" ))){
return(4)
}
if(any(x == c("Skôr súhlasím", "Väčšina učiteľov", "Väčšina predmetov"))){
return(3)
}
if(any(x == c("Skôr nesúhlasím", "Menšina učiteľov", "Menšina predmetov"))){
return(2)
}
if(any(x == c("Rozhodne nesúhlasím", "Takmer žiadni učitelia", "Takmer žiadne predmety"))){
return(1)
}
return(x)
}
data1 <- data.frame(apply(data,c(1, 2), converter))
head(data1)
dim(data)
ukf <- data[,data$VSa == "UKF"]
ukf
head(ukf)
ukf <- data[data$VSa == "UKF", ]
head(ukf)
unique(data$VSa)
ukf <- data[data$VS == "UKF", ]
head(ukf)
unique(data$VS)
"STU" %in% "STU   "
mean(data$total)
max(data$total)
sd(data$total)
hist(data$total)
col.names <- colnames(data)
col.names
hist(data$total, probability = TRUE)
?hist
hist(data$total, probability = TRUE, col="cyan")
hist(data$total, col="red")
source("C:/Users/roman/Desktop/school/BS/bp/analysis.R", encoding = 'UTF-8', echo=TRUE)
tail(new.data)
dim(new.data)
hist(data$total, col="yellow")
?qnorm
points <- dnorm(1:168, mean=mean(data$total), sd=sd(data$total))
hist(data$total, col="yellow")
lines(1:168, points)
curve(1:168, points)
?lines
hist(data$total, col="yellow")
points
hist(data$total, col="yellow", probability = TRUE)
lines(1:168, points)
source("C:/Users/roman/Desktop/school/BS/bp/analysis.R", encoding = 'UTF-8', echo=TRUE)
tail(new.data)
source("C:/Users/roman/Desktop/school/BS/bp/analysis.R", encoding = 'UTF-8', echo=TRUE)
tail(new.data)
source("C:/Users/roman/Desktop/school/BS/bp/analysis.R", encoding = 'UTF-8', echo=TRUE)
install.packages("psych")
source("C:/Users/roman/Desktop/school/BS/bp/analysis.R", encoding = 'UTF-8', echo=TRUE)
library(psych)
install.packages("vioplot")
library(vioplot)
install.packages("psych")
library(psych)
source("C:/Users/roman/Desktop/school/BS/bp/analysis.R", encoding = 'UTF-8', echo=TRUE)
source("C:/Users/roman/Desktop/school/BS/bp/analysis.R", encoding = 'UTF-8', echo=TRUE)
install.packages("psych")
library(psych)
cube(2)
f <- function(n){}
f <- function(n){return(1/(sqrt(n^2 + 1) - (n^3 + 1)^(1/3)))}
f(1000)
f <- function(n){return(1/(n*(sqrt(n^2 + 1) - (n^3 + 1)^(1/3)))}
f <- function(n){return(1/(n*(sqrt(n^2 + 1) - (n^3 + 1)^(1/3)))}
f <- function(n){return(1/(sqrt(n^2 + 1) - (n^3 + 1)^(1/3)))}
f <- function(n){return(1/(n*(sqrt(n^2 + 1) - (n^3 + 1)^(1/3))))}
f(1000)
f(10^7)
f(10^8)
f(10^14)
install.packages("Hmisc")
library(Hmisc)
install.packages("ggplot2")
library(Hmisc)
install.packages("vctrs")
install.packages("ggplot2")
library(Hmisc)
install.packages("Hmisc")
library(Hmisc)
library(ggplot2)
source("C:/Users/roman/Desktop/school/BS/bp/analysis.R", encoding = 'UTF-8', echo=TRUE)
source("C:/Users/roman/Desktop/school/BS/bp/analysis.R", encoding = 'UTF-8', echo=TRUE)
head(new.data)
head(data)
head(new.data)
nrow(new.data)
library(updater)
library(installr)
install.Rtools()
install.packages("installr")
library(installr)
install.Rtools()
install.packages("ggplot2")
library(ggplot2)
install.Rtools()
library(installr)
install.Rtools()
installr::install.Rtools()
library(installr)
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot", dependencies = TRUE)
u
library(installr)
library(foreign)
install.packages("ggplot2")
install.packages("installr")
library(installr)
library(ggplot2)
source("C:/Users/roman/Desktop/school/BS/bp/analysis.R", echo=TRUE)
install.packages("Hmisc")
library(Hmisc)
install.packages("psych")
source("C:/Users/roman/Desktop/school/BS/bp/analysis.R", echo=TRUE)
alpha(flex)
?aplha
?alpha
alpha(flex, max=5)
alpha(flex, keys=colnames(flex))
tail(flex)
alpha(flex)
setwd("C:/Users/roman/Desktop/school/BS/bp")
alpha(flex)
source("C:/Users/roman/Desktop/school/BS/bp/analysis.R", echo=TRUE)
length(col.names)
alpha(flex)
alpha(hodnot)
alpha(zruc)
alpha(pred)
