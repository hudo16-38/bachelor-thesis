data = 1:1000 + rnorm(1000,sd=75)
x = 1:1000
plot(x,data)
data = 1:1000 + rnorm(1000,sd=75)
x = 1:1000
plot(x,data)
data = 1:1000 + rnorm(1000,sd=75)
x = 1:1000
plot(x,data)
data = 1:1000 + rnorm(1000,sd=75)
x = 1:1000
plot(x,data)
data = 1:1000 + rnorm(1000,sd=75)
x = 1:1000
plot(x,data)
data = 1:1000 + rnorm(1000,sd=75)
x = 1:1000
plot(x,data)
data = 1:1000 + rnorm(1000,sd=75)
x = 1:1000
plot(x,data)
data = 1:1000 + rnorm(1000,sd=75)
x = 1:1000
plot(x,data)
data = 1:1000 + rnorm(1000,sd=75)
x = 1:1000
plot(x,data)
data = 1:1000 + rnorm(1000,sd=75)
x = 1:1000
plot(x,data)
data = 1:1000 + rnorm(1000,sd=75)
x = 1:1000
plot(x,data)
data = 1:1000 + rnorm(1000,sd=75)
x = 1:1000
plot(x,data)
data = 1:1000 + rnorm(1000,sd=75)
x = 1:1000
plot(x,data)
data = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
plot(x,data)
model=lm(x~data)
?lm
a,b = model$coefficients
predict(model,x)
predict(model,list(x))
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
plot(x,data)
model=lm(x~data)
p = predict(model,list(x))
lines(p)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
plot(x,data)
model=lm(x~data)
p = predict(model,list(x))
lines(x,p)
plot(x,data)
lines(x,p)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
plot(x,data)
abline(lm(x~data))
?abline
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
plot(x,data)
abline(lm(x~data),col="red")
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
plot(x,data,col="green")
abline(lm(x~data),col="red")
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
plot(x,data,col="blue")
abline(lm(x~data),col="red")
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
plot(x,data,col="cyan")
abline(lm(x~data),col="red")
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
plot(x,data,col="orange")
abline(lm(x~data),col="red")
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
plot(x,data)
abline(lm(x~data),col="blue")
abline(lm(x~data),col="blue",lwd=1.5)
abline(lm(x~data),col="blue",lwd=2.5)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
plot(x,data)
abline(lm(x~data),col="red",lwd=2.5)
abline(lm(x~data),col="green",lwd=2.5)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
plot(x,data)
abline(lm(x~data),col="red",lwd=2.5)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
plot(x,data)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
o1 = 1:12 + rnorm(12,sd=100) + 800
o2 = 790:802 + rnorm(12,sd=100) - 500
new_x = c(x, 1:12, 790:802)
new_y = c(data1, o1, o2)
plot(new_x,new_y)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
o1 = 1:12 + rnorm(12,sd=100) + 800
o2 = 790:802 + rnorm(12,sd=100) - 600
new_x = c(x, 1:12, 790:802)
new_y = c(data1, o1, o2)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
o1 = 1:12 + rnorm(12,sd=100) + 800
o2 = 790:802 + rnorm(12,sd=100) - 600
new_x = c(x, 1:12, 790:802)
new_y = c(data1, o1, o2)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
o1 = 1:12 + rnorm(12,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, 1:12, 790:802)
new_y = c(data1, o1, o2)
?runif
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
o1 = 1:12 + rnorm(12,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, runif(12, 100,200), 790:802)
new_y = c(data1, o1, o2)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
o1 = 1:12 + rnorm(12,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, runif(12, 100,200), 790:802)
new_y = c(data1, o1, o2)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
o1 = 1:12 + rnorm(12,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, runif(12, 100,200), 790:802)
new_y = c(data1, o1, o2)
plot(new_x,new_y)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
o1 = 1:12 + rnorm(12,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, runif(12, 100,200), 790:801)
new_y = c(data1, o1, o2)
plot(new_x,new_y)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
o1 = 1:12 + rnorm(12,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, runif(12, 100,200), runif(12,790,801)
new_y = c(data1, o1, o2)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
o1 = 1:12 + rnorm(12,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, runif(12, 100,200), runif(12,790,801))
new_y = c(data1, o1, o2)
plot(new_x,new_y)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
o1 = 1:12 + rnorm(12,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, runif(12, 100,200), runif(12,790,801))
new_y = c(data1, o1, o2)
plot(new_x,new_y)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
o1 = 1:12 + rnorm(12,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, runif(12, 100,200), runif(12,790,801))
new_y = c(data1, o1, o2)
plot(new_x,new_y)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
o1 = 1:12 + rnorm(12,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, runif(12, 100,200), runif(12,790,801))
new_y = c(data1, o1, o2)
plot(new_x,new_y)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
o1 = 1:12 + rnorm(12,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, runif(12, 100,200), runif(12,790,801))
new_y = c(data1, o1, o2)
plot(new_x,new_y)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
o1 = 1:12 + rnorm(12,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, runif(12, 100,200), runif(12,790,801))
new_y = c(data1, o1, o2)
plot(new_x,new_y)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
o1 = 1:12 + rnorm(12,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, runif(12, 100,200), runif(12,790,801))
new_y = c(data1, o1, o2)
plot(new_x,new_y)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
o1 = 1:12 + rnorm(12,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, runif(12, 100,200), runif(12,750,801))
new_y = c(data1, o1, o2)
plot(new_x,new_y)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
o1 = 1:12 + rnorm(12,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, runif(12, 100,200), runif(12,750,801))
new_y = c(data1, o1, o2)
plot(new_x,new_y)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
o1 = 1:12 + rnorm(12,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, runif(12, 100,200), runif(12,750,801))
new_y = c(data1, o1, o2)
plot(new_x,new_y)
abline(lm(new_x~new_y),col="red",lwd=2.5)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
o1 = 1:22 + rnorm(12,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, runif(22, 100,200), runif(12,750,801))
new_y = c(data1, o1, o2)
plot(new_x,new_y)
abline(lm(new_x~new_y),col="red",lwd=2.5)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
o1 = 1:32 + rnorm(12,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, runif(32, 100,200), runif(12,750,801))
new_y = c(data1, o1, o2)
plot(new_x,new_y)
abline(lm(new_x~new_y),col="red",lwd=2.5)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
o1 = 1:42 + rnorm(12,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, runif(42, 100,250), runif(12,750,801))
new_y = c(data1, o1, o2)
plot(new_x,new_y)
abline(lm(new_x~new_y),col="red",lwd=2.5)
data1 = 1:1000 + rnorm(1000,sd=100)
x = 1:1000
o1 = 1:62 + rnorm(12,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, runif(62, 100,250), runif(12,750,801))
new_y = c(data1, o1, o2)
plot(new_x,new_y)
abline(lm(new_x~new_y),col="red",lwd=2.5)
data1 = 1:800 + rnorm(800,sd=100)
x = 1:800
o1 = 1:62 + rnorm(12,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, runif(62, 100,250), runif(12,750,801))
new_y = c(data1, o1, o2)
plot(new_x,new_y)
data1 = 1:800 + rnorm(800,sd=100)
x = 1:800
o1 = 1:62 + rnorm(62,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, runif(62, 100,250), runif(12,750,801))
new_y = c(data1, o1, o2)
plot(new_x,new_y)
data1 = 1:800 + rnorm(800,sd=100)
x = 1:800
o1 = 1:62 + rnorm(62,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, runif(62, 100,250), runif(12,750,801))
new_y = c(data1, o1, o2)
plot(new_x,new_y)
abline(lm(new_x~new_y),col="red",lwd=2.5)
data1 = 1:800 + rnorm(800,sd=100)
x = 1:800
o1 = 1:62 + rnorm(62,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, runif(62, 100,250), runif(12,750,801))
new_y = c(data1, o1, o2)
plot(new_x,new_y)
data1 = 1:800 + rnorm(800,sd=100)
x = 1:800
o1 = 1:62 + rnorm(62,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, runif(62, 100,250), runif(12,750,801))
new_y = c(data1, o1, o2)
plot(new_x,new_y)
data1 = 1:800 + rnorm(800,sd=100)
x = 1:800
o1 = 1:62 + rnorm(62,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, runif(62, 100,250), runif(12,750,801))
new_y = c(data1, o1, o2)
plot(new_x,new_y)
data1 = 1:800 + rnorm(800,sd=100)
x = 1:800
o1 = 1:62 + rnorm(62,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(x, runif(62, 100,250), runif(12,750,801))
new_y = c(data1, o1, o2)
plot(new_x,new_y)
abline(lm(new_x~new_y),col="red",lwd=2.5)
N=800
data1 = 1:N + rnorm(N,sd=100)
data2 = 1:N + rnorm(N,sd=100) + 620
data3 = 1:N + rnorm(N,sd=100) - 300
x = 1:N
o1 = 1:62 + rnorm(62,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(replicate(x, 3))
?replicate
N=800
data1 = 1:N + rnorm(N,sd=100)
data2 = 1:N + rnorm(N,sd=100) + 620
data3 = 1:N + rnorm(N,sd=100) - 300
x = 1:N
o1 = 1:62 + rnorm(62,sd=100) + 800
o2 = 790:801 + rnorm(12,sd=100) - 600
new_x = c(replicate(3, x))
new_y = c(data1, data2, data3)
plot(new_x,new_y)
N=800
data1 = 1:N + rnorm(N,sd=100)
data2 = 1:N + rnorm(N,sd=100) + 620
data3 = 1:N + rnorm(N,sd=100) - 500
x = 1:N
new_x = c(replicate(3, x))
new_y = c(data1, data2, data3)
plot(new_x,new_y)
N=800
data1 = 1:N + rnorm(N,sd=100)
data2 = 1:N + rnorm(N,sd=100) + 720
data3 = 1:N + rnorm(N,sd=100) - 800
x = 1:N
new_x = c(replicate(3, x))
new_y = c(data1, data2, data3)
plot(new_x,new_y)
N=800
data1 = 1:N + rnorm(N,sd=100)
data2 = 1:N + rnorm(N,sd=120) + 720
data3 = 1:N + rnorm(N,sd=145) - 800
x = 1:N
new_x = c(replicate(3, x))
new_y = c(data1, data2, data3)
plot(new_x,new_y)
N=800
data1 = 1:N + rnorm(N,sd=100)
data2 = 1:N + rnorm(N,sd=120) + 820
data3 = 1:N + rnorm(N,sd=145) - 800
x = 1:N
new_x = c(replicate(3, x))
new_y = c(data1, data2, data3)
plot(new_x,new_y)
abline(lm(new_x~new_y),col="red",lwd=2.5)
?lm
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
abline(lm(new_x~new_y),col="red",lwd=2.5)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
N=800
library(MASS)
x = 1:N
out_x = runif(50, 80, 160)
out_x2 = runif(50, 700, 800)
y = x + rnorm(N, sd=100)
out_y = rnorm(50, sd=100) + 850
out_y2 = rnorm(50, sd=100) - 250
new_x = c(x, out_x, out_x2)
new_y = c(y, out_y, out_y2)
plot(new_x,new_y)
abline(lm(new_x~new_y),col="red",lwd=2.5)
plot(new_x,new_y)
abline(rlm(new_x~new_y),col="green",lwd=2.5)
abline(rlm(new_x~new_y),col="blue",lwd=2.5)
abline(lm(new_x~new_y),col="red",lwd=2.5)
N=800
library(MASS)
x = 1:N
out_x = runif(50, 80, 160)
out_x2 = runif(50, 700, 800)
y = x + rnorm(N, sd=100)
out_y = rnorm(50, sd=100) + 850
out_y2 = rnorm(50, sd=100) - 250
new_x = c(x, out_x, out_x2)
new_y = c(y, out_y, out_y2)
plot(x, y)
abline(lm(x~y),col="red",lwd=2.5)
plot(new_x,new_y)
abline(lm(new_x~new_y),col="red",lwd=2.5)
abline(rlm(new_x~new_y),col="blue",lwd=2.5)
plot(new_x,new_y)
abline(rlm(new_x~new_y),col="blue",lwd=2.5)
library(foreign)
library(psych)
library(mokken)
library(mirt)
library(lme4)
library(robustlmm)
#library(sjPlot)
FILE.NAME <- "C:/Users/roman/Desktop/school/BS/bp/SAAVSspokoj.sav"
setwd("C:/Users/roman/Desktop/school/BS/bp")
alpha = psych::alpha
#load data
data <- read.spss(FILE.NAME, to.data.frame=TRUE, reencode="utf-8")
programmes <- unique(data$odbor)
converter <- function(x){
if(any(x == c("Rozhodne súhlasím","Takmer všetci učitelia", "Takmer všetky predmety" ))){
return(5)
}
if(any(x == c("Skôr súhlasím", "Väčšina učiteľov", "Väčšina predmetov"))){
return(4)
}
if(any(x == c("Skôr nesúhlasím", "Menšina učiteľov", "Menšina predmetov"))){
return(2)
}
if(any(x == c("Rozhodne nesúhlasím", "Takmer žiadni učitelia", "Takmer žiadne predmety"))){
return(1)
}
if(x == "Netýka sa ma to"){
return(3)
}
return(gsub(' ','',x))
}
#conversion of data to numbers
new.data <- as.data.frame(apply(data, c(1,2), converter))
drop = c("VSa", "fakulta1")
new.data = new.data[, !(names(new.data) %in% drop)]
#column names
col.names <- colnames(new.data)
#retyping of char columns to numeric type
for(col in col.names[5:length(col.names)]){
new.data[,col] = as.numeric(new.data[,col])
}
#TAKING DIMENSIONS
flexibility <- subset(new.data, select=5:9)
subjects <- subset(new.data, select = 10:16)
teachers.teaching <- subset(new.data, select=17:23)
teachers.approach <- subset(new.data, select = 24:30)
rating <- subset(new.data, select = 31:35)
skills <- subset(new.data, select=36:41)
student.support <- subset(new.data, select=42:46)
totals <- subset(new.data, select=47:54)
#SCALING
coefH(flexibility)
coefH(subjects)
coefH(teachers.teaching)
coefH(teachers.approach)
coefH(rating)
coefH(skills)
coefH(student.support)
to.plot = FALSE
mon1 = check.monotonicity(flexibility)
summary(mon1)
mon2 = check.monotonicity(subjects)
summary(mon2)
mon3 = check.monotonicity(teachers.teaching)
summary(mon3)
mon4 = check.monotonicity(teachers.approach)
summary(mon4)
mon5 = check.monotonicity(rating)
summary(mon5)
mon6 = check.monotonicity(skills)
summary(mon6)
mon7 = check.monotonicity(student.support)
summary(mon7)
if(to.plot){
for(mon in c(mon1, mon2, mon3, mon4, mon5, mon6, mon7)){
plot(mon)
}
}
#TODO - check.ca, AISP
check.flexibilty = check.ca(flexibility)
check.subjects = check.ca(subjects)
check.teachers.teaching = check.ca(teachers.teaching)
check.teachers.approach = check.ca(teachers.approach)
check.rating = check.ca(rating)
check.skills = check.ca(skills)
check.student.support = check.ca(student.support)
flexibility.aisp = AISP(flexibility)
